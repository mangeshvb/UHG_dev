<apex:component controller="ACETDataTableController">   
    <apex:stylesheet value="{!URLFOR($Resource.jQueryDatatableResources,'jquery-ui.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.jQueryDatatableResources,'jquery.dataTables.min.js')}" />
    <apex:stylesheet value="{!URLFOR($Resource.jQueryDatatableResources,'jquery.dataTables.min.css')}" />
    <!--<apex:includeScript value="{!URLFOR($Resource.jQueryDatatableResources,'jquery.highlight.js')}" /> -->
    <!--<apex:includeScript value="{!URLFOR($Resource.jQueryDatatableResources,'dataTables.searchHighlight.min.js')}" /> -->
    <!--<apex:stylesheet value="{!URLFOR($Resource.jQueryDatatableResources,'dataTables.searchHighlight.css')}" /> -->           
    <apex:attribute type="ACETDataTableWrapper" name="attrDatatableWrapper" description="data table wrapper instance" />                           
    <table id="datatable" class="auto-doc-list display"></table>
    <style>
    	/** to align left the header cell and data cell when sorting is disabled, datatable keeps 8px as a place holder for sorting icon */
    	#datatable th {padding-left:10px}			
    </style>
    <script> 
     //set initOnDocumentReady to false and call initDatatable in method oncomplete if oncomplete is defined on action function
     var initOnDocumentReady = '{!attrDatatableWrapper.InitOnDocumentReady}';    
                                
     $(document).ready(function(){          
    	if(initOnDocumentReady == 'true'){
    		initDatatable();  
    	}      
   	 });
   
     function initDatatable(){
   		   var columns = JSON.parse('{!attrDatatableWrapper.StrColumns}');          
           var pageSize = {!attrDatatableWrapper.PageSize};
           var startRecord = {!attrDatatableWrapper.StartRecord}; 
           var pageStartNumber = {!attrDatatableWrapper.PageStartNumber};
           var pagingType = '{!attrDatatableWrapper.PagingType}';           
           var serviceName = '{!attrDatatableWrapper.ServiceName}';
			     			           
           var service =  '{!attrDatatableWrapper.Service}';
           service = service.replace('&#x27;', '\'');
           var $table = $('#datatable');
           $table.DataTable({ 
               "lengthChange": false,
               "pageLength": pageSize,
               "pagingType": pagingType,
               "processing": true,
               "serverSide": true, 
               "searching": false,
               "ordering": false,                          
               "ajax": function (data, callback, settings) {
               		console.log(data);                                                                             
                    Visualforce.remoting.Manager.invokeAction(
                       '{!$RemoteAction.ACETDataTableController.queryPaginatedData}',
                       serviceName,
                       service,
                       parseInt(data.start/pageSize) + pageStartNumber, 
                       pageSize, 
                       startRecord,
                       function(result, event){
                          console.log("result:");
                          console.log(result);
                          callback(getData(data, result, settings));               
                       }, 
                       {escape: true}
                   );
                                      
               },
               "columns": columns,
               "createdRow": function(row, data, dataIndex) {
                   if(typeof processDatatable != "undefined"){
                        processDatatable(row, data, dataIndex);
                    }
                },
                "initComplete": function(settings, json) {
                	if(typeof initDatatableComplete != "undefined"){                		
                		initDatatableComplete(settings, json);
                	}
                },
                "drawCallback": function(settings) {
                	if(typeof drawCallback != "undefined"){ 
                		drawCallback(settings);
                	}
                	
                	//display autodoc checkboxes                	
                	//acet.autodoc.startAutodoc(); 
                	
                	//exclude from autodoc
                	$(".dataTables_info").attr("auto-doc-item", "false");
                	$("#datatable_paginate").attr("auto-doc-item", "false");                	                	              		
                }                                       
           });
                                                                         
       function getData(d, ret, s){       		
       		if(ret.Success){
	           return {
	            "draw": d.draw,
	            "start": d.start,           
	            "recordsTotal": ret.totalCount,
	            "recordsFiltered": ret.totalCount,
	            "data": ret.Response	            	            
	           };
           }else{
               //a workround to display error message in table
               s.oLanguage.sEmptyTable = ret.Message;
           	   return {
	            "draw": d.draw,
	            "start": d.start,           
	            "recordsTotal": 0,
	            "recordsFiltered": 0,
	            "data": [],
	            "error": ret.Message
	           };
           }
       }  
   
   } 
          
  </script>
      
</apex:component>